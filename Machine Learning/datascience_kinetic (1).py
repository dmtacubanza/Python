# -*- coding: utf-8 -*-
"""DataScience_Kinetic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kH3HH0ZLpqvwkq9E3AvztdS7wZLfs3HO
"""

import pandas as pd
import datetime
import numpy as np

# Load the Excel file into a pandas dataframe
df = pd.read_excel('KPI_Values.xlsx')

# Remove the '_Data' suffix from the MonthIND column
df['MonthIND'] = df['MonthIND'].str.rstrip('_Data')

# Convert the MonthIND column to datetime format
df['MonthIND'] = pd.to_datetime(df['MonthIND'], format='%b%y').dt.to_period('M')

# Print the updated dataframe
print(df)

# Pivot the dataframe to show months as columns
df_pivot = pd.pivot_table(df, index='KPIName', columns='MonthIND', values='KPIValue')

print(df_pivot)

# Compute the rolling mean for the previous 3 months
df['RollingMean'] = df['KPIValue'].rolling(window=3, min_periods=1).mean()

# Compute the rolling standard deviation for the previous 3 months
df['RollingSD'] = df['KPIValue'].rolling(window=3, min_periods=1).std()

# Compute for MinT Min of threshold for KPI (Mean - SD)
df['MinT'] = df['RollingMean'] - df['RollingSD']

# Compute for MaxT Min of threshold for KPI (Mean + SD)
df['MaxT'] = df['RollingMean'] + df['RollingSD']

# Compute for Severity - Actual KPI Value / MaxT
df['Severity'] = df['KPIValue'] / df['MaxT']

# Compute if Exceeding - Yes if Severity > 1.1
df['Exceeding'] = np.where(df['Severity'] > 1.1, 'Yes', 'No')

# Compute for Frequency
df['Frequency'] = df['Severity'].rolling(window=4, min_periods=1).apply(lambda x: (x > 1.1).sum())

print(df)

from IPython.display import FileLink

df.to_csv('KPI_DarwinTacubanza.csv', index=False)

# Create a link to the CSV file
FileLink('KPI_DarwinTacubanza.csv')